{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExportApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","onChange","target","value","type","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExportApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"2MAEMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACRN,EAAWO,OAAOC,QAAU,IAC5BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAIlB,SAEI,uBACIS,SAhBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOC,QAefC,KAAK,OACLD,MAAOZ,OAKvBH,EAAYiB,WAAa,CACrBhB,c,OAAeiB,EAAUC,KAAKC,YAEnBpB,Q,+BC7BFqB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACnBf,QAAQC,IAAI,eAAea,GACrBE,EAFa,mGAEqFC,UAAUH,IAF/F,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCSLO,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAI,KACnB,4BAAIN,QCqBDO,EAvBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B2B,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CAELf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDjB0BK,CAAa1B,GAAjCa,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAwDhB,IACvDoB,GAAW,mBAAGJ,UAAU,oCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEkBtBgB,EAhCM,WAAM,MAGa/C,mBAAS,CAAC,gBAHvB,mBAGhBgD,EAHgB,KAGJjD,EAHI,KAavB,OACI,qCACI,6CACA,cAAC,EAAD,CACIA,cAAeA,IAGnB,uBAGA,6BACKiD,EAAWnB,KAAI,SAAAoB,GAAG,OACf,cAAC,EAAD,CAAS7B,SAAU6B,a,MCtBvCC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.00edcef2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('Submit hecho');\n        if (inputValue.trim().length >= 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <input\n                onChange={handleInputChange}\n                type=\"text\"\n                value={inputValue}\n            />\n        </form>\n    )\n}\nAddCategory.protoTypes = {\n    setCategories: PropTypes.func.isRequired\n}\nexport default AddCategory\n","\n\n\nexport const getGifs = async (category) => {\n    console.log('categoria : '+category)\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&api_key=Fx16au8XaXm3cKQb9QsK2RoOR7rZL7G9&q=${encodeURI(category)}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt=\"\" />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__fadeIn\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                setState({\n\n                    data: imgs,\n                    loading: false\n                });\n\n            })\n    }, [category])\n\n    return state; //return the state, the information \n\n}\n\n\n","import React, { useState } from 'react'\nimport AddCategory from './AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GitExportApp = () => {\n\n    //const categories = ['Dragon Ball', 'naruto', 'my hero academia']\n    const [categories, setCategories] = useState(['Dragon Ball']);\n\n    // const handleAdd = () => {\n    //     // add a new category by spreed operator\n    //     // 1 way\n    //     //? setCategories([...categories, 'one piece']);\n    //     //2 way\n    //     setCategories(cats => [...cats, 'one piece']);\n\n    // }\n    return (\n        <>\n            <h2>GiExportapp</h2>\n            <AddCategory\n                setCategories={setCategories}\n            />\n\n            <hr />\n\n\n            <ol>\n                {categories.map(cat => (\n                    <GifGrid category={cat} />\n                ))}\n            </ol>\n        </>\n    )\n}\n\nexport default GitExportApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExportApp from './GitExportApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GitExportApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}